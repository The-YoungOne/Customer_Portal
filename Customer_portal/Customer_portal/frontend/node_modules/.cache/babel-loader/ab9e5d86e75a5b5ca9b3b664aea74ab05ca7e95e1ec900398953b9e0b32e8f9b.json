{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lab_services_student\\\\Desktop\\\\Customer_portal\\\\Customer_portal\\\\frontend\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [currency, setCurrency] = useState('ZAR');\n  const [beneficiaryName, setBeneficiaryName] = useState('');\n  const [paymentReference, setPaymentReference] = useState('');\n  const [recipientAccountNumber, setRecipientAccountNumber] = useState('');\n  const [userAccountNumber, setUserAccountNumber] = useState('');\n  const [formError, setFormError] = useState('');\n  const navigate = useNavigate();\n\n  // Fetch user account number on mount\n  useEffect(() => {\n    const fetchUserAccountNumber = async () => {\n      const token = localStorage.getItem('jwtToken');\n      try {\n        const response = await axios.get('https://localhost:5000/api/user/profile', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserAccountNumber(response.data.accountNumber);\n      } catch (error) {\n        console.error('Error fetching user account number:', error);\n      }\n    };\n    fetchUserAccountNumber();\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Reset form error\n    setFormError('');\n\n    // Validate the form inputs\n    if (!amount || !currency || !beneficiaryName || !paymentReference || !recipientAccountNumber) {\n      setFormError('All fields are required.');\n      return;\n    }\n\n    // Proceed with payment submission\n    const token = localStorage.getItem('jwtToken');\n    try {\n      const response = await axios.post('https://localhost:5000/api/user/payments', {\n        amount,\n        currency,\n        beneficiaryName,\n        paymentReference,\n        recipientAccountNumber,\n        userAccountNumber\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200 || response.status === 201) {\n        // If the payment is successful, navigate to confirmation page\n        navigate('/confirmation');\n      } else {\n        setFormError('Failed to process the payment. Please try again.');\n      }\n    } catch (error) {\n      if (error.response && error.response.data.error === 'Recipient account number does not exist.') {\n        setFormError('Recipient account number does not exist.');\n      } else {\n        setFormError('An error occurred while processing your payment. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-50 min-h-screen flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl p-8 max-w-md w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900 mb-6\",\n        children: \"Payment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), formError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mb-4\",\n        children: formError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 23\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"recipientAccountNumber\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Recipient Account Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"recipientAccountNumber\",\n            name: \"recipientAccountNumber\",\n            value: recipientAccountNumber,\n            onChange: e => setRecipientAccountNumber(e.target.value),\n            className: \"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userAccountNumber\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Your Account Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userAccountNumber\",\n            name: \"userAccountNumber\",\n            value: userAccountNumber,\n            readOnly: true,\n            className: \"mt-1 block w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"paymentReference\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Payment Reference\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"paymentReference\",\n            name: \"paymentReference\",\n            rows: \"2\",\n            value: paymentReference,\n            onChange: e => setPaymentReference(e.target.value),\n            className: \"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-purple-600 text-white px-4 py-3 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors\",\n          children: \"Proceed with Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"7EcUp5CdxrslzQJwRBUFEe3yi4Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Payment","_s","amount","setAmount","currency","setCurrency","beneficiaryName","setBeneficiaryName","paymentReference","setPaymentReference","recipientAccountNumber","setRecipientAccountNumber","userAccountNumber","setUserAccountNumber","formError","setFormError","navigate","fetchUserAccountNumber","token","localStorage","getItem","response","get","headers","Authorization","data","accountNumber","error","console","handleSubmit","e","preventDefault","post","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","target","required","readOnly","rows","_c","$RefreshReg$"],"sources":["C:/Users/lab_services_student/Desktop/Customer_portal/Customer_portal/frontend/src/components/Payment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Payment = () => {\r\n  const [amount, setAmount] = useState('');\r\n  const [currency, setCurrency] = useState('ZAR');\r\n  const [beneficiaryName, setBeneficiaryName] = useState('');\r\n  const [paymentReference, setPaymentReference] = useState('');\r\n  const [recipientAccountNumber, setRecipientAccountNumber] = useState('');\r\n  const [userAccountNumber, setUserAccountNumber] = useState('');\r\n  const [formError, setFormError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch user account number on mount\r\n  useEffect(() => {\r\n    const fetchUserAccountNumber = async () => {\r\n      const token = localStorage.getItem('jwtToken');\r\n      try {\r\n        const response = await axios.get('https://localhost:5000/api/user/profile', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setUserAccountNumber(response.data.accountNumber);\r\n      } catch (error) {\r\n        console.error('Error fetching user account number:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserAccountNumber();\r\n  }, []);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Reset form error\r\n    setFormError('');\r\n\r\n    // Validate the form inputs\r\n    if (!amount || !currency || !beneficiaryName || !paymentReference || !recipientAccountNumber) {\r\n      setFormError('All fields are required.');\r\n      return;\r\n    }\r\n\r\n    // Proceed with payment submission\r\n    const token = localStorage.getItem('jwtToken');\r\n    try {\r\n      const response = await axios.post(\r\n        'https://localhost:5000/api/user/payments',\r\n        {\r\n          amount,\r\n          currency,\r\n          beneficiaryName,\r\n          paymentReference,\r\n          recipientAccountNumber,\r\n          userAccountNumber,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        // If the payment is successful, navigate to confirmation page\r\n        navigate('/confirmation');\r\n      } else {\r\n        setFormError('Failed to process the payment. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.data.error === 'Recipient account number does not exist.') {\r\n        setFormError('Recipient account number does not exist.');\r\n      } else {\r\n        setFormError('An error occurred while processing your payment. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen flex items-center justify-center p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl p-8 max-w-md w-full\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-6\">Payment Details</h1>\r\n\r\n        {formError && <p className=\"text-red-600 mb-4\">{formError}</p>} {/* Display form errors */}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          {/* Other form fields (amount, currency, etc.) */}\r\n\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"recipientAccountNumber\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Recipient Account Number\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"recipientAccountNumber\"\r\n              name=\"recipientAccountNumber\"\r\n              value={recipientAccountNumber}\r\n              onChange={(e) => setRecipientAccountNumber(e.target.value)}\r\n              className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* User Account Number (Autofilled, Read-Only) */}\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"userAccountNumber\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Your Account Number\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"userAccountNumber\"\r\n              name=\"userAccountNumber\"\r\n              value={userAccountNumber}\r\n              readOnly\r\n              className=\"mt-1 block w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n            />\r\n          </div>\r\n\r\n          {/* Payment Reference */}\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"paymentReference\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Payment Reference\r\n            </label>\r\n            <textarea\r\n              id=\"paymentReference\"\r\n              name=\"paymentReference\"\r\n              rows=\"2\"\r\n              value={paymentReference}\r\n              onChange={(e) => setPaymentReference(e.target.value)}\r\n              className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-purple-600 text-white px-4 py-3 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors\"\r\n          >\r\n            Proceed with Payment\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}