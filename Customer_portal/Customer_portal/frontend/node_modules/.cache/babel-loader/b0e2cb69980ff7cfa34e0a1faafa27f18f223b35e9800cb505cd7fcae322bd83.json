{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lab_services_student\\\\Documents\\\\GitHub\\\\Customer_Portal\\\\Customer_portal\\\\Customer_portal\\\\frontend\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // To handle the API call\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const [amount, setAmount] = useState(''); // Initial amount input (in ZAR)\n  const [currency, setCurrency] = useState('ZAR'); // Default currency is ZAR\n  const [exchangeRates, setExchangeRates] = useState({});\n  const [beneficiaryName, setBeneficiaryName] = useState(''); // Beneficiary name input\n  const [paymentReference, setPaymentReference] = useState(''); // Payment reference input\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [formError, setFormError] = useState(''); // Field validation error message\n\n  const navigate = useNavigate(); // To redirect after successful payment\n\n  // Fetch exchange rates when the component mounts\n  useEffect(() => {\n    const fetchExchangeRates = async () => {\n      try {\n        const response = await fetch(`https://v6.exchangerate-api.com/v6/${process.env.REACT_APP_EXCHANGE_API_KEY}/latest/ZAR`);\n        const data = await response.json();\n        if (data.result === 'success') {\n          setExchangeRates(data.conversion_rates); // Set conversion rates\n          setLoading(false);\n        } else {\n          throw new Error('Failed to fetch exchange rates');\n        }\n      } catch (error) {\n        setError('Failed to fetch exchange rates.');\n        setLoading(false);\n      }\n    };\n    fetchExchangeRates();\n  }, []);\n\n  // Handle the currency change and update the converted amount\n  const handleCurrencyChange = e => {\n    const newCurrency = e.target.value;\n    setCurrency(newCurrency);\n    updateConvertedAmount(amount, newCurrency); // Update conversion when currency changes\n  };\n\n  // Handle the amount input and update the state (converts the amount when currency changes)\n  const handleAmountChange = e => {\n    const newAmount = e.target.value;\n    updateConvertedAmount(newAmount, currency); // Convert amount to selected currency\n  };\n\n  // Update the amount input with the converted value\n  const updateConvertedAmount = (amount, selectedCurrency) => {\n    const rate = exchangeRates[selectedCurrency] || 1; // Default rate of 1 if no exchange rate is found\n    const converted = (amount * rate).toFixed(2); // Convert amount to selected currency\n    setAmount(converted); // Update the input field with the converted amount\n  };\n\n  // Validate form inputs\n  const validateForm = () => {\n    if (!amount || !currency || !beneficiaryName || !paymentReference) {\n      setFormError('All fields are required.');\n      return false;\n    }\n    return true;\n  };\n\n  // Handle form submission (sending the payment to the backend)\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Reset form error before validation\n    setFormError('');\n\n    // Validate form inputs\n    if (!validateForm()) return;\n\n    // Get the JWT token from localStorage (assuming the user is logged in)\n    const token = localStorage.getItem('jwtToken');\n    try {\n      // Send the payment data to the backend\n      const response = await axios.post('https://localhost:5000/api/user/payments',\n      // Corrected API endpoint\n      {\n        amount,\n        currency,\n        beneficiaryName,\n        paymentReference\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}` // Send JWT token in headers\n        }\n      });\n      if (response.status === 200 || response.status === 201) {\n        // If the payment is successful, navigate to the confirmation page\n        navigate('/confirmation'); // Redirect to Confirmation.js\n      } else {\n        setFormError('Failed to process the payment. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error processing the payment:', error);\n      setFormError('An error occurred while processing your payment. Please try again.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading exchange rates...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-50 min-h-screen flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl p-8 max-w-md w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900 mb-6\",\n        children: \"Payment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), formError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mb-4\",\n        children: formError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group flex-grow\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amount\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                id: \"amount\",\n                name: \"amount\",\n                value: amount,\n                onChange: handleAmountChange // Update amount and convert\n                ,\n                className: \"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\",\n                required: true,\n                step: \"0.01\",\n                min: \"0.01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group w-1/3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"currency\",\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"currency\",\n              name: \"currency\",\n              value: currency,\n              onChange: handleCurrencyChange // Update currency on selection change\n              ,\n              className: \"custom-select mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\",\n              children: Object.keys(exchangeRates).map(currencyOption => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: currencyOption,\n                children: currencyOption\n              }, currencyOption, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"beneficiaryName\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Beneficiary Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"beneficiaryName\",\n            name: \"beneficiaryName\",\n            value: beneficiaryName,\n            onChange: e => setBeneficiaryName(e.target.value),\n            className: \"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"paymentReference\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Payment Reference\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"paymentReference\",\n            name: \"paymentReference\",\n            rows: \"2\",\n            value: paymentReference,\n            onChange: e => setPaymentReference(e.target.value),\n            className: \"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-purple-600 text-white px-4 py-3 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors\",\n          children: \"Proceed wtih Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"JCMVcsT6ekTrqpFUSpV+pXe5jn4=\", false, function () {\n  return [useNavigate];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Payment","_s","amount","setAmount","currency","setCurrency","exchangeRates","setExchangeRates","beneficiaryName","setBeneficiaryName","paymentReference","setPaymentReference","loading","setLoading","error","setError","formError","setFormError","navigate","fetchExchangeRates","response","fetch","process","env","REACT_APP_EXCHANGE_API_KEY","data","json","result","conversion_rates","Error","handleCurrencyChange","e","newCurrency","target","value","updateConvertedAmount","handleAmountChange","newAmount","selectedCurrency","rate","converted","toFixed","validateForm","handleSubmit","preventDefault","token","localStorage","getItem","post","headers","Authorization","status","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","name","onChange","required","step","min","Object","keys","map","currencyOption","rows","_c","$RefreshReg$"],"sources":["C:/Users/lab_services_student/Documents/GitHub/Customer_Portal/Customer_portal/Customer_portal/frontend/src/components/Payment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'; // To handle the API call\r\n\r\nconst Payment = () => {\r\n  const [amount, setAmount] = useState(''); // Initial amount input (in ZAR)\r\n  const [currency, setCurrency] = useState('ZAR'); // Default currency is ZAR\r\n  const [exchangeRates, setExchangeRates] = useState({});\r\n  const [beneficiaryName, setBeneficiaryName] = useState(''); // Beneficiary name input\r\n  const [paymentReference, setPaymentReference] = useState(''); // Payment reference input\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [formError, setFormError] = useState(''); // Field validation error message\r\n\r\n  const navigate = useNavigate(); // To redirect after successful payment\r\n\r\n  // Fetch exchange rates when the component mounts\r\n  useEffect(() => {\r\n    const fetchExchangeRates = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://v6.exchangerate-api.com/v6/${process.env.REACT_APP_EXCHANGE_API_KEY}/latest/ZAR`\r\n        );\r\n        const data = await response.json();\r\n        if (data.result === 'success') {\r\n          setExchangeRates(data.conversion_rates); // Set conversion rates\r\n          setLoading(false);\r\n        } else {\r\n          throw new Error('Failed to fetch exchange rates');\r\n        }\r\n      } catch (error) {\r\n        setError('Failed to fetch exchange rates.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchExchangeRates();\r\n  }, []);\r\n\r\n  // Handle the currency change and update the converted amount\r\n  const handleCurrencyChange = (e) => {\r\n    const newCurrency = e.target.value;\r\n    setCurrency(newCurrency);\r\n    updateConvertedAmount(amount, newCurrency); // Update conversion when currency changes\r\n  };\r\n\r\n  // Handle the amount input and update the state (converts the amount when currency changes)\r\n  const handleAmountChange = (e) => {\r\n    const newAmount = e.target.value;\r\n    updateConvertedAmount(newAmount, currency); // Convert amount to selected currency\r\n  };\r\n\r\n  // Update the amount input with the converted value\r\n  const updateConvertedAmount = (amount, selectedCurrency) => {\r\n    const rate = exchangeRates[selectedCurrency] || 1; // Default rate of 1 if no exchange rate is found\r\n    const converted = (amount * rate).toFixed(2); // Convert amount to selected currency\r\n    setAmount(converted); // Update the input field with the converted amount\r\n  };\r\n\r\n  // Validate form inputs\r\n  const validateForm = () => {\r\n    if (!amount || !currency || !beneficiaryName || !paymentReference) {\r\n      setFormError('All fields are required.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Handle form submission (sending the payment to the backend)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Reset form error before validation\r\n    setFormError('');\r\n\r\n    // Validate form inputs\r\n    if (!validateForm()) return;\r\n\r\n    // Get the JWT token from localStorage (assuming the user is logged in)\r\n    const token = localStorage.getItem('jwtToken');\r\n\r\n    try {\r\n      // Send the payment data to the backend\r\n      const response = await axios.post(\r\n        'https://localhost:5000/api/user/payments', // Corrected API endpoint\r\n        {\r\n          amount,\r\n          currency,\r\n          beneficiaryName,\r\n          paymentReference,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Send JWT token in headers\r\n          },\r\n        }\r\n      );\r\n      \r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        // If the payment is successful, navigate to the confirmation page\r\n        navigate('/confirmation'); // Redirect to Confirmation.js\r\n      } else {\r\n        setFormError('Failed to process the payment. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing the payment:', error);\r\n      setFormError('An error occurred while processing your payment. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading exchange rates...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen flex items-center justify-center p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl p-8 max-w-md w-full\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-6\">Payment Details</h1>\r\n\r\n        {formError && <p className=\"text-red-600 mb-4\">{formError}</p>} {/* Display form errors */}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <div className=\"flex space-x-4\">\r\n            <div className=\"input-group flex-grow\">\r\n              <label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-700 mb-1\">Amount</label>\r\n              <div className=\"relative\">\r\n                <input \r\n                  type=\"number\" \r\n                  id=\"amount\" \r\n                  name=\"amount\"\r\n                  value={amount}\r\n                  onChange={handleAmountChange} // Update amount and convert\r\n                  className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n                  required \r\n                  step=\"0.01\" \r\n                  min=\"0.01\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"input-group w-1/3\">\r\n              <label htmlFor=\"currency\" className=\"block text-sm font-medium text-gray-700 mb-1\">Currency</label>\r\n              <select \r\n                id=\"currency\" \r\n                name=\"currency\"\r\n                value={currency}\r\n                onChange={handleCurrencyChange} // Update currency on selection change\r\n                className=\"custom-select mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n              >\r\n                {Object.keys(exchangeRates).map((currencyOption) => (\r\n                  <option key={currencyOption} value={currencyOption}>\r\n                    {currencyOption}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Beneficiary Name */}\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"beneficiaryName\" className=\"block text-sm font-medium text-gray-700 mb-1\">Beneficiary Name</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"beneficiaryName\" \r\n              name=\"beneficiaryName\"\r\n              value={beneficiaryName}\r\n              onChange={(e) => setBeneficiaryName(e.target.value)}\r\n              className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Payment Reference */}\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"paymentReference\" className=\"block text-sm font-medium text-gray-700 mb-1\">Payment Reference</label>\r\n            <textarea \r\n              id=\"paymentReference\" \r\n              name=\"paymentReference\"\r\n              rows=\"2\"\r\n              value={paymentReference}\r\n              onChange={(e) => setPaymentReference(e.target.value)}\r\n              className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n            />\r\n          </div>\r\n\r\n          <button \r\n            type=\"submit\" \r\n            className=\"w-full bg-purple-600 text-white px-4 py-3 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors\"\r\n          >\r\n            Proceed wtih Payment\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}