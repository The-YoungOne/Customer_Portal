{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lab_services_student\\\\Desktop\\\\Customer_portal\\\\Customer_portal\\\\frontend\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const [amount, setAmount] = useState(''); // Initial amount input (in ZAR)\n  const [beneficiaryName, setBeneficiaryName] = useState(''); // Beneficiary name input\n  const [paymentReference, setPaymentReference] = useState(''); // Payment reference input\n  const [recipientAccountNumber, setRecipientAccountNumber] = useState(''); // New state for recipient account number\n  const [userAccountNumber, setUserAccountNumber] = useState(''); // New state for user's account number (autofilled)\n  const [error, setError] = useState(null); // General error\n  const [formError, setFormError] = useState(''); // Field validation error message\n\n  const navigate = useNavigate(); // To redirect after successful payment\n\n  // Fetch user account number when the component mounts\n  useEffect(() => {\n    const fetchUserAccountNumber = async () => {\n      const token = localStorage.getItem('jwtToken');\n      try {\n        const response = await axios.get('https://localhost:5000/api/profile', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserAccountNumber(response.data.accountNumber);\n      } catch (error) {\n        console.error('Error fetching user account number:', error);\n        setError('Error fetching account details. Please try again.');\n      }\n    };\n    fetchUserAccountNumber();\n  }, []);\n\n  // Validate form inputs\n  const validateForm = () => {\n    if (!amount || !beneficiaryName || !paymentReference || !recipientAccountNumber) {\n      setFormError('All fields are required.');\n      return false;\n    }\n    return true;\n  };\n\n  // Handle form submission (sending the payment to the backend)\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Reset form error before validation\n    setFormError('');\n\n    // Validate form inputs\n    if (!validateForm()) return;\n\n    // Get the JWT token from localStorage (assuming the user is logged in)\n    const token = localStorage.getItem('jwtToken');\n    try {\n      const response = await axios.post('https://localhost:5000/api/payments', {\n        amount,\n        currency: 'ZAR',\n        // Assuming the default currency is ZAR\n        beneficiaryName,\n        paymentReference,\n        recipientAccountNumber,\n        userAccountNumber\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200 || response.status === 201) {\n        // If the payment is successful, navigate to confirmation page\n        navigate('/confirmation');\n      } else {\n        setFormError('Failed to process the payment. Please try again.');\n      }\n    } catch (error) {\n      if (error.response && error.response.data.error === 'Recipient account number does not exist.') {\n        setFormError('Recipient account number does not exist.');\n      } else {\n        setFormError('An error occurred while processing your payment. Please try again.');\n      }\n    }\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-50 min-h-screen flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl p-8 max-w-md w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900 mb-6\",\n        children: \"Payment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), formError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mb-4\",\n        children: formError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"amount\",\n            name: \"amount\",\n            value: amount,\n            onChange: e => setAmount(e.target.value) // Update amount\n            ,\n            className: \"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\",\n            required: true,\n            step: \"0.01\",\n            min: \"0.01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"beneficiaryName\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Beneficiary Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"beneficiaryName\",\n            name: \"beneficiaryName\",\n            value: beneficiaryName,\n            onChange: e => setBeneficiaryName(e.target.value),\n            className: \"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"recipientAccountNumber\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Recipient Account Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"recipientAccountNumber\",\n            name: \"recipientAccountNumber\",\n            value: recipientAccountNumber,\n            onChange: e => setRecipientAccountNumber(e.target.value),\n            className: \"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userAccountNumber\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Your Account Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userAccountNumber\",\n            name: \"userAccountNumber\",\n            value: userAccountNumber // This is auto-filled from the user profile\n            ,\n            readOnly: true // Make it read-only\n            ,\n            className: \"mt-1 block w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"paymentReference\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Payment Reference\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"paymentReference\",\n            name: \"paymentReference\",\n            rows: \"2\",\n            value: paymentReference,\n            onChange: e => setPaymentReference(e.target.value),\n            className: \"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-purple-600 text-white px-4 py-3 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors\",\n          children: \"Proceed with Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"vB9kRwKF6GDVgdeqnojKxIrzIPg=\", false, function () {\n  return [useNavigate];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Payment","_s","amount","setAmount","beneficiaryName","setBeneficiaryName","paymentReference","setPaymentReference","recipientAccountNumber","setRecipientAccountNumber","userAccountNumber","setUserAccountNumber","error","setError","formError","setFormError","navigate","fetchUserAccountNumber","token","localStorage","getItem","response","get","headers","Authorization","data","accountNumber","console","validateForm","handleSubmit","e","preventDefault","post","currency","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","name","value","onChange","target","required","step","min","readOnly","rows","_c","$RefreshReg$"],"sources":["C:/Users/lab_services_student/Desktop/Customer_portal/Customer_portal/frontend/src/components/Payment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Payment = () => {\r\n  const [amount, setAmount] = useState(''); // Initial amount input (in ZAR)\r\n  const [beneficiaryName, setBeneficiaryName] = useState(''); // Beneficiary name input\r\n  const [paymentReference, setPaymentReference] = useState(''); // Payment reference input\r\n  const [recipientAccountNumber, setRecipientAccountNumber] = useState(''); // New state for recipient account number\r\n  const [userAccountNumber, setUserAccountNumber] = useState(''); // New state for user's account number (autofilled)\r\n  const [error, setError] = useState(null); // General error\r\n  const [formError, setFormError] = useState(''); // Field validation error message\r\n\r\n  const navigate = useNavigate(); // To redirect after successful payment\r\n\r\n  // Fetch user account number when the component mounts\r\n  useEffect(() => {\r\n    const fetchUserAccountNumber = async () => {\r\n      const token = localStorage.getItem('jwtToken');\r\n      try {\r\n        const response = await axios.get('https://localhost:5000/api/profile', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setUserAccountNumber(response.data.accountNumber);\r\n      } catch (error) {\r\n        console.error('Error fetching user account number:', error);\r\n        setError('Error fetching account details. Please try again.');\r\n      }\r\n    };\r\n\r\n    fetchUserAccountNumber();\r\n  }, []);\r\n\r\n  // Validate form inputs\r\n  const validateForm = () => {\r\n    if (!amount || !beneficiaryName || !paymentReference || !recipientAccountNumber) {\r\n      setFormError('All fields are required.');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Handle form submission (sending the payment to the backend)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Reset form error before validation\r\n    setFormError('');\r\n\r\n    // Validate form inputs\r\n    if (!validateForm()) return;\r\n\r\n    // Get the JWT token from localStorage (assuming the user is logged in)\r\n    const token = localStorage.getItem('jwtToken');\r\n    try {\r\n      const response = await axios.post(\r\n        'https://localhost:5000/api/payments',\r\n        {\r\n          amount,\r\n          currency: 'ZAR', // Assuming the default currency is ZAR\r\n          beneficiaryName,\r\n          paymentReference,\r\n          recipientAccountNumber,\r\n          userAccountNumber,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        // If the payment is successful, navigate to confirmation page\r\n        navigate('/confirmation');\r\n      } else {\r\n        setFormError('Failed to process the payment. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.data.error === 'Recipient account number does not exist.') {\r\n        setFormError('Recipient account number does not exist.');\r\n      } else {\r\n        setFormError('An error occurred while processing your payment. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen flex items-center justify-center p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl p-8 max-w-md w-full\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-6\">Payment Details</h1>\r\n\r\n        {formError && <p className=\"text-red-600 mb-4\">{formError}</p>} {/* Display form errors */}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-700 mb-1\">Amount</label>\r\n            <input \r\n              type=\"number\" \r\n              id=\"amount\" \r\n              name=\"amount\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)} // Update amount\r\n              className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n              required \r\n              step=\"0.01\" \r\n              min=\"0.01\"\r\n            />\r\n          </div>\r\n\r\n          {/* Beneficiary Name */}\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"beneficiaryName\" className=\"block text-sm font-medium text-gray-700 mb-1\">Beneficiary Name</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"beneficiaryName\" \r\n              name=\"beneficiaryName\"\r\n              value={beneficiaryName}\r\n              onChange={(e) => setBeneficiaryName(e.target.value)}\r\n              className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Recipient Account Number */}\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"recipientAccountNumber\" className=\"block text-sm font-medium text-gray-700 mb-1\">Recipient Account Number</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"recipientAccountNumber\" \r\n              name=\"recipientAccountNumber\"\r\n              value={recipientAccountNumber}\r\n              onChange={(e) => setRecipientAccountNumber(e.target.value)}\r\n              className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* User Account Number (Autofilled, Read-Only) */}\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"userAccountNumber\" className=\"block text-sm font-medium text-gray-700 mb-1\">Your Account Number</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"userAccountNumber\" \r\n              name=\"userAccountNumber\"\r\n              value={userAccountNumber} // This is auto-filled from the user profile\r\n              readOnly // Make it read-only\r\n              className=\"mt-1 block w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n            />\r\n          </div>\r\n\r\n          {/* Payment Reference */}\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"paymentReference\" className=\"block text-sm font-medium text-gray-700 mb-1\">Payment Reference</label>\r\n            <textarea \r\n              id=\"paymentReference\" \r\n              name=\"paymentReference\"\r\n              rows=\"2\"\r\n              value={paymentReference}\r\n              onChange={(e) => setPaymentReference(e.target.value)}\r\n              className=\"mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\r\n            />\r\n          </div>\r\n\r\n          <button \r\n            type=\"submit\" \r\n            className=\"w-full bg-purple-600 text-white px-4 py-3 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors\"\r\n          >\r\n            Proceed with Payment\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}