{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lab_services_student\\\\Desktop\\\\Customer_portal\\\\Customer_portal\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport https from 'https';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    idNumber: '',\n    password: '',\n    confirmPassword: '',\n    username: '',\n    accountNumber: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState({\n    type: '',\n    message: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) newErrors.name = 'Name is required';\n    if (!formData.idNumber.trim()) newErrors.idNumber = 'ID Number is required';\n    if (!formData.username.trim()) newErrors.username = 'Username is required';\n    if (!formData.accountNumber.trim()) newErrors.accountNumber = 'Account number is required';\n    if (formData.password.length < 6) newErrors.password = 'Password must be at least 6 characters';\n    if (formData.password !== formData.confirmPassword) newErrors.confirmPassword = 'Passwords do not match';\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setIsLoading(true);\n    setSubmitStatus({\n      type: '',\n      message: ''\n    });\n    try {\n      // Create a custom Axios instance with an agent to bypass certificate validation\n      const axiosInstance = axios.create({\n        baseURL: 'https://localhost:5000',\n        httpsAgent: new https.Agent({\n          rejectUnauthorized: false // Disable SSL certificate validation\n        })\n      });\n      const response = await axios.post('https://localhost:5000/api/user/register', formData);\n      if (response.status === 201) {\n        setSubmitStatus({\n          type: 'success',\n          message: 'Registration successful!'\n        });\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Registration error:', error);\n      console.error('Response details:', error.response);\n      setSubmitStatus({\n        type: 'error',\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.details) || 'Error registering user. Please try again.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), submitStatus.message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: submitStatus.type === 'error' ? 'error' : 'success',\n      children: submitStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"uc90STkA2Y4cZmZAkAfSZB37Rig=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","https","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","name","idNumber","password","confirmPassword","username","accountNumber","errors","setErrors","isLoading","setIsLoading","submitStatus","setSubmitStatus","type","message","handleChange","e","value","target","prev","validateForm","newErrors","trim","length","Object","keys","handleSubmit","preventDefault","axiosInstance","create","baseURL","httpsAgent","Agent","rejectUnauthorized","response","post","status","error","_error$response","_error$response$data","console","data","details","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/lab_services_student/Desktop/Customer_portal/Customer_portal/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport https from 'https';\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    idNumber: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    username: '',\r\n    accountNumber: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [submitStatus, setSubmitStatus] = useState({ type: '', message: '' });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!formData.name.trim()) newErrors.name = 'Name is required';\r\n    if (!formData.idNumber.trim()) newErrors.idNumber = 'ID Number is required';\r\n    if (!formData.username.trim()) newErrors.username = 'Username is required';\r\n    if (!formData.accountNumber.trim()) newErrors.accountNumber = 'Account number is required';\r\n    if (formData.password.length < 6) newErrors.password = 'Password must be at least 6 characters';\r\n    if (formData.password !== formData.confirmPassword) newErrors.confirmPassword = 'Passwords do not match';\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    setIsLoading(true);\r\n    setSubmitStatus({ type: '', message: '' });\r\n\r\n    try {\r\n      // Create a custom Axios instance with an agent to bypass certificate validation\r\n      const axiosInstance = axios.create({\r\n        baseURL: 'https://localhost:5000',\r\n        httpsAgent: new https.Agent({  \r\n          rejectUnauthorized: false  // Disable SSL certificate validation\r\n        })\r\n      });\r\n\r\n      const response = await axios.post('https://localhost:5000/api/user/register', formData);\r\n\r\n\r\n      if (response.status === 201) {\r\n        setSubmitStatus({\r\n          type: 'success',\r\n          message: 'Registration successful!'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      console.error('Response details:', error.response);\r\n\r\n      setSubmitStatus({\r\n        type: 'error',\r\n        message: error.response?.data?.details || 'Error registering user. Please try again.',\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Your form fields go here */}\r\n      <button type=\"submit\">Register</button>\r\n      {submitStatus.message && (\r\n        <p className={submitStatus.type === 'error' ? 'error' : 'success'}>\r\n          {submitStatus.message}\r\n        </p>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}